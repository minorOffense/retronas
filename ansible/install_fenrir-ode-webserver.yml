---
- hosts: localhost
  gather_facts: false

  vars:
    my_name: "fenrir-ode-webserver"
    my_file: "install_fenrir-ode-webserver"
    module_name: "fenrir-ode-webserver"

    packages:
      - make
      - gcc
      - g++
      - coreutils
      - cmake

    fenrir_ode_path: "{{ retronas_path }}/fenrir-ode-webserver"
    fenrir_ode_port: "31994"
    fenrir_ode_bin: "/usr/local/bin/FenrirServer"

    my_service: "{{ my_name }}.service"

    templates:
      - { name: "{{ my_file }}.sh", dest: "{{ retronas_root }}/scripts", mode: "0755" }
      - { name: "{{ my_name }}.service", dest: "/usr/lib/systemd/system" }

  tasks:

    - name: "{{ my_name }} - Load RetroNAS config"
      ansible.builtin.include_vars: retronas_vars.yml

    - ansible.builtin.import_role:
        name: retronas.role.package.latest
      notify: "{{ my_name }} - Restart service"

    - ansible.builtin.import_role:
        name: retronas.role.templates
      notify: "{{ my_name }} - Restart service"

    - name: "{{ my_name }} - run build tool"
      ansible.builtin.shell:
        cmd: "{{ retronas_root }}/scripts/{{ my_file }}.sh"
        creates: "{{ fenrir_ode_bin }}"
      notify: "{{ my_name }} - Restart service"

    - name: "{{ my_name }} - create share link"
      ansible.builtin.file:
        src: "roms/sega/saturn"
        dest: "{{ fenrir_ode_path }}"
        state: link
      notify: "{{ my_name }} - Restart service"

    - ansible.builtin.import_role:
        name: retronas.role.system-config

  handlers:
    - name: "{{ my_name }} - Restart service"
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
        enabled: true
        daemon_reload: true
      with_items: "{{ my_service }}"
